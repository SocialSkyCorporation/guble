// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/smancke/guble/client (interfaces: WSConnection)

package client

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of WSConnection interface
type MockWSConnection struct {
	ctrl     *gomock.Controller
	recorder *_MockWSConnectionRecorder
}

// Recorder for MockWSConnection (not exported)
type _MockWSConnectionRecorder struct {
	mock *MockWSConnection
}

func NewMockWSConnection(ctrl *gomock.Controller) *MockWSConnection {
	mock := &MockWSConnection{ctrl: ctrl}
	mock.recorder = &_MockWSConnectionRecorder{mock}
	return mock
}

func (_m *MockWSConnection) EXPECT() *_MockWSConnectionRecorder {
	return _m.recorder
}

func (_m *MockWSConnection) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWSConnectionRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockWSConnection) ReadMessage() (int, []byte, error) {
	ret := _m.ctrl.Call(_m, "ReadMessage")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockWSConnectionRecorder) ReadMessage() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReadMessage")
}

func (_m *MockWSConnection) WriteMessage(_param0 int, _param1 []byte) error {
	ret := _m.ctrl.Call(_m, "WriteMessage", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWSConnectionRecorder) WriteMessage(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteMessage", arg0, arg1)
}
