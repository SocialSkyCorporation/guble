// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/smancke/guble/store (interfaces: MessageStore)

package websocket

import (
	gomock "github.com/golang/mock/gomock"
	store "github.com/smancke/guble/store"
)

// Mock of MessageStore interface
type MockMessageStore struct {
	ctrl     *gomock.Controller
	recorder *_MockMessageStoreRecorder
}

// Recorder for MockMessageStore (not exported)
type _MockMessageStoreRecorder struct {
	mock *MockMessageStore
}

func NewMockMessageStore(ctrl *gomock.Controller) *MockMessageStore {
	mock := &MockMessageStore{ctrl: ctrl}
	mock.recorder = &_MockMessageStoreRecorder{mock}
	return mock
}

func (_m *MockMessageStore) EXPECT() *_MockMessageStoreRecorder {
	return _m.recorder
}

func (_m *MockMessageStore) Check() error {
	ret := _m.ctrl.Call(_m, "Check")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockMessageStoreRecorder) Check() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Check")
}

func (_m *MockMessageStore) DoInTx(_param0 string, _param1 func(uint64) error) error {
	ret := _m.ctrl.Call(_m, "DoInTx", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockMessageStoreRecorder) DoInTx(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DoInTx", arg0, arg1)
}

func (_m *MockMessageStore) Fetch(_param0 store.FetchRequest) {
	_m.ctrl.Call(_m, "Fetch", _param0)
}

func (_mr *_MockMessageStoreRecorder) Fetch(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Fetch", arg0)
}

func (_m *MockMessageStore) GenerateNextMsgId(_param0 string, _param1 int) (uint64, int64, error) {
	ret := _m.ctrl.Call(_m, "GenerateNextMsgId", _param0, _param1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockMessageStoreRecorder) GenerateNextMsgId(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GenerateNextMsgId", arg0, arg1)
}

func (_m *MockMessageStore) MaxMessageId(_param0 string) (uint64, error) {
	ret := _m.ctrl.Call(_m, "MaxMessageId", _param0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockMessageStoreRecorder) MaxMessageId(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MaxMessageId", arg0)
}

func (_m *MockMessageStore) Store(_param0 string, _param1 uint64, _param2 []byte) error {
	ret := _m.ctrl.Call(_m, "Store", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockMessageStoreRecorder) Store(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Store", arg0, arg1, arg2)
}
